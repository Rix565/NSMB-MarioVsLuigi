component Enemy {
	FPVector2 Spawnpoint;
	bool IgnorePlayerWhenRespawning;
	bool DisableRespawning;

	[ExcludeFromPrototype] bool IsActive;
	[ExcludeFromPrototype] bool IsDead;
	[ExcludeFromPrototype] bool FacingRight;
}

signal OnEnemyDespawned(EntityRef entity);
signal OnEnemyRespawned(EntityRef entity);
signal OnEnemyEnemyCollision(EntityRef a, EntityRef b);
signal OnEnemyKilledByStageReset(EntityRef entity);
signal OnEnemyTurnaround(EntityRef entity);

enum KillReason : Byte {
	Normal,
	Special,
	Groundpounded,
	InWall
}

event EnemyDespawned {
	EntityRef Entity;
}

event EnemyKilled {
	EntityRef Enemy;
	EntityRef Killer;
	KillReason KillReason;
	nothashed FPVector2 EnemyCenter;
}

event PlayComboSound {
	EntityRef Entity;
	nothashed byte Combo;
}

event PlayBumpSound {
	EntityRef Entity;
}

event EnemyKicked {
	EntityRef Entity;
	bool Groundpounded;
}
