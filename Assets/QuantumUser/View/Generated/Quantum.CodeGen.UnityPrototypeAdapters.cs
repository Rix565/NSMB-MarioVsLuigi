// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes.Unity {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  public unsafe partial class EnterablePipePrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.EnterablePipePrototype> {
    public Quantum.QuantumEntityPrototype OtherPipe;
    public QBoolean IsEnterable;
    public QBoolean IsCeilingPipe;
    public QBoolean IsMiniOnly;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.EnterablePipePrototype prototype);
    public override Quantum.Prototypes.EnterablePipePrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.EnterablePipePrototype();
      converter.Convert(this.OtherPipe, out result.OtherPipe);
      converter.Convert(this.IsEnterable, out result.IsEnterable);
      converter.Convert(this.IsCeilingPipe, out result.IsCeilingPipe);
      converter.Convert(this.IsMiniOnly, out result.IsMiniOnly);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class GoldBlockPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.GoldBlockPrototype> {
    public Quantum.QuantumEntityPrototype AttachedTo;
    public Int32 ObjectiveCoinsRemaining;
    public Byte Timer;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.GoldBlockPrototype prototype);
    public override Quantum.Prototypes.GoldBlockPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.GoldBlockPrototype();
      converter.Convert(this.AttachedTo, out result.AttachedTo);
      converter.Convert(this.ObjectiveCoinsRemaining, out result.ObjectiveCoinsRemaining);
      converter.Convert(this.Timer, out result.Timer);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PhysicsContactPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PhysicsContactPrototype> {
    public FPVector2 Position;
    public FPVector2 Normal;
    public FP Distance;
    public Int32 Frame;
    public IntVector2 Tile;
    public Quantum.QuantumEntityPrototype Entity;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PhysicsContactPrototype prototype);
    public override Quantum.Prototypes.PhysicsContactPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PhysicsContactPrototype();
      converter.Convert(this.Position, out result.Position);
      converter.Convert(this.Normal, out result.Normal);
      converter.Convert(this.Distance, out result.Distance);
      converter.Convert(this.Frame, out result.Frame);
      converter.Convert(this.Tile, out result.Tile);
      converter.Convert(this.Entity, out result.Entity);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PhysicsObjectPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PhysicsObjectPrototype> {
    public FPVector2 Gravity;
    public FP TerminalVelocity;
    public QBoolean IsFrozen;
    public QBoolean DisableCollision;
    public QBoolean SlowInLiquids;
    public QBoolean IsWaterSolid;
    public QBoolean BreakMegaObjects;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PhysicsObjectPrototype prototype);
    public override Quantum.Prototypes.PhysicsObjectPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PhysicsObjectPrototype();
      converter.Convert(this.Gravity, out result.Gravity);
      converter.Convert(this.TerminalVelocity, out result.TerminalVelocity);
      converter.Convert(this.IsFrozen, out result.IsFrozen);
      converter.Convert(this.DisableCollision, out result.DisableCollision);
      converter.Convert(this.SlowInLiquids, out result.SlowInLiquids);
      converter.Convert(this.IsWaterSolid, out result.IsWaterSolid);
      converter.Convert(this.BreakMegaObjects, out result.BreakMegaObjects);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PiranhaPlantPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PiranhaPlantPrototype> {
    public Quantum.QuantumEntityPrototype Pipe;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PiranhaPlantPrototype prototype);
    public override Quantum.Prototypes.PiranhaPlantPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PiranhaPlantPrototype();
      converter.Convert(this.Pipe, out result.Pipe);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class StarCoinPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.StarCoinPrototype> {
    public Byte DespawnCounter;
    public Quantum.QuantumEntityPrototype Collector;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.StarCoinPrototype prototype);
    public override Quantum.Prototypes.StarCoinPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.StarCoinPrototype();
      converter.Convert(this.DespawnCounter, out result.DespawnCounter);
      converter.Convert(this.Collector, out result.Collector);
      ConvertUser(converter, ref result);
      return result;
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
